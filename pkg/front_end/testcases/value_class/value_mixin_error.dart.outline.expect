library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

@self::valueClass
class A extends core::Object {
  synthetic constructor •() → self::A
    ;
}
class B extends core::Object {
  synthetic constructor •() → self::B
    ;
}
abstract class _C&B&A = self::B with self::A /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_C&B&A
    : super self::B::•()
    ;
}
class C extends self::_C&B&A {
  synthetic constructor •() → self::C
    ;
}
abstract class _D&A&B = self::A with self::B /*isAnonymousMixin*/  {
  synthetic constructor •() → self::_D&A&B
    : super self::A::•()
    ;
}
class D extends self::_D&A&B {
  synthetic constructor •() → self::D
    ;
}
static const field core::String valueClass = "valueClass";
static method main() → dynamic
  ;
